{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x759b9C51620281f9CBD45D448c029c549135b7f4",
      "txHash": "0x1f7e07a675858ffa349c43e1e74d76d3e3df6b30b38923135e62412f296ecfa4",
      "kind": "uups"
    },
    {
      "address": "0x7a3CdB2364f92369a602CAE81167d0679087e6a3",
      "txHash": "0xf325c53b9e0e5c17dafb292178a28ab0aab4ae0cda6c02b173547b0fc42b042a",
      "kind": "uups"
    },
    {
      "address": "0xeb074cc764F20d8fE4317ab63f45A85bcE2bEcB1",
      "txHash": "0x1ee186ea302acd69c7250030fec20b40228cfe08940fdb242dc848cb6145ef71",
      "kind": "uups"
    }
  ],
  "impls": {
    "3d511cce6f19b2f10461bc4403e81bf5160b268de828bdb93ce366302534d033": {
      "address": "0xd8Aa8bEe56E53454ed188f69350b4236b04e47E0",
      "txHash": "0x76c62598bcad67e8146357b28a1d6f533fbeb62eee6196b248b0e11b8dfd7747",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "PullPaymentUpgradeable",
            "label": "_escrow",
            "type": "t_contract(EscrowUpgradeable)2679",
            "src": "@openzeppelin/contracts-upgradeable/security/PullPaymentUpgradeable.sol:28"
          },
          {
            "contract": "PullPaymentUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PullPaymentUpgradeable.sol:76"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
          },
          {
            "contract": "Marketplace",
            "label": "memberships",
            "type": "t_contract(IERC1155)4255",
            "src": "contracts/Marketplace.sol:54"
          },
          {
            "contract": "Marketplace",
            "label": "vipFee",
            "type": "t_uint16",
            "src": "contracts/Marketplace.sol:56"
          },
          {
            "contract": "Marketplace",
            "label": "memberFee",
            "type": "t_uint16",
            "src": "contracts/Marketplace.sol:57"
          },
          {
            "contract": "Marketplace",
            "label": "regFee",
            "type": "t_uint16",
            "src": "contracts/Marketplace.sol:58"
          },
          {
            "contract": "Marketplace",
            "label": "activeListings",
            "type": "t_struct(Map)8279_storage",
            "src": "contracts/Marketplace.sol:60"
          },
          {
            "contract": "Marketplace",
            "label": "completeListings",
            "type": "t_struct(Map)8279_storage",
            "src": "contracts/Marketplace.sol:61"
          },
          {
            "contract": "Marketplace",
            "label": "cancelledListings",
            "type": "t_struct(Map)8279_storage",
            "src": "contracts/Marketplace.sol:62"
          },
          {
            "contract": "Marketplace",
            "label": "listingId",
            "type": "t_struct(Counter)2215_storage",
            "src": "contracts/Marketplace.sol:64"
          },
          {
            "contract": "Marketplace",
            "label": "royalties",
            "type": "t_mapping(t_address,t_struct(Royalty)8723_storage)",
            "src": "contracts/Marketplace.sol:66"
          }
        ],
        "types": {
          "t_contract(IERC1155)4255": {
            "label": "contract IERC1155"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_struct(Map)8279_storage": {
            "label": "struct IterableMapping.Map",
            "members": [
              {
                "label": "keys",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "idToKey",
                "type": "t_mapping(t_uint256,t_bytes32)"
              },
              {
                "label": "values",
                "type": "t_mapping(t_bytes32,t_struct(Listing)8258_storage)"
              },
              {
                "label": "indexOf",
                "type": "t_mapping(t_bytes32,t_uint256)"
              },
              {
                "label": "inserted",
                "type": "t_mapping(t_bytes32,t_bool)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(Listing)8258_storage)": {
            "label": "mapping(bytes32 => struct IterableMapping.Listing)"
          },
          "t_struct(Listing)8258_storage": {
            "label": "struct IterableMapping.Listing",
            "members": [
              {
                "label": "listingId",
                "type": "t_uint256"
              },
              {
                "label": "nftId",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address"
              },
              {
                "label": "nft",
                "type": "t_address"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "fee",
                "type": "t_uint256"
              },
              {
                "label": "purchaser",
                "type": "t_address"
              },
              {
                "label": "is1155",
                "type": "t_bool"
              },
              {
                "label": "listingTime",
                "type": "t_uint256"
              },
              {
                "label": "saleTime",
                "type": "t_uint256"
              },
              {
                "label": "endingTime",
                "type": "t_uint256"
              },
              {
                "label": "royalty",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Counter)2215_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(Royalty)8723_storage)": {
            "label": "mapping(address => struct Marketplace.Royalty)"
          },
          "t_struct(Royalty)8723_storage": {
            "label": "struct Marketplace.Royalty",
            "members": [
              {
                "label": "ipHolder",
                "type": "t_address"
              },
              {
                "label": "percent",
                "type": "t_uint16"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_contract(EscrowUpgradeable)2679": {
            "label": "contract EscrowUpgradeable"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "32933eafcd08cff317c1c74de0f4117b99e24582fc4ceea2a28d425f7425eeb9": {
      "address": "0x12Aa64e92b71BD6b59292C5f8E89168D7a581b6e",
      "txHash": "0x0a61b77949c17a79e4e62a90eb350fa56305543e34779297cf088c308611802b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "PullPaymentUpgradeable",
            "label": "_escrow",
            "type": "t_contract(EscrowUpgradeable)2679",
            "src": "@openzeppelin/contracts-upgradeable/security/PullPaymentUpgradeable.sol:28"
          },
          {
            "contract": "PullPaymentUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PullPaymentUpgradeable.sol:76"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
          },
          {
            "contract": "Marketplace",
            "label": "memberships",
            "type": "t_contract(IERC1155)4255",
            "src": "contracts/Marketplace.sol:54"
          },
          {
            "contract": "Marketplace",
            "label": "vipFee",
            "type": "t_uint16",
            "src": "contracts/Marketplace.sol:56"
          },
          {
            "contract": "Marketplace",
            "label": "memberFee",
            "type": "t_uint16",
            "src": "contracts/Marketplace.sol:57"
          },
          {
            "contract": "Marketplace",
            "label": "regFee",
            "type": "t_uint16",
            "src": "contracts/Marketplace.sol:58"
          },
          {
            "contract": "Marketplace",
            "label": "activeListings",
            "type": "t_struct(Map)8279_storage",
            "src": "contracts/Marketplace.sol:60"
          },
          {
            "contract": "Marketplace",
            "label": "completeListings",
            "type": "t_struct(Map)8279_storage",
            "src": "contracts/Marketplace.sol:61"
          },
          {
            "contract": "Marketplace",
            "label": "cancelledListings",
            "type": "t_struct(Map)8279_storage",
            "src": "contracts/Marketplace.sol:62"
          },
          {
            "contract": "Marketplace",
            "label": "listingId",
            "type": "t_struct(Counter)2215_storage",
            "src": "contracts/Marketplace.sol:64"
          },
          {
            "contract": "Marketplace",
            "label": "royalties",
            "type": "t_mapping(t_address,t_struct(Royalty)8723_storage)",
            "src": "contracts/Marketplace.sol:66"
          }
        ],
        "types": {
          "t_contract(IERC1155)4255": {
            "label": "contract IERC1155"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_struct(Map)8279_storage": {
            "label": "struct IterableMapping.Map",
            "members": [
              {
                "label": "keys",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "idToKey",
                "type": "t_mapping(t_uint256,t_bytes32)"
              },
              {
                "label": "values",
                "type": "t_mapping(t_bytes32,t_struct(Listing)8258_storage)"
              },
              {
                "label": "indexOf",
                "type": "t_mapping(t_bytes32,t_uint256)"
              },
              {
                "label": "inserted",
                "type": "t_mapping(t_bytes32,t_bool)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(Listing)8258_storage)": {
            "label": "mapping(bytes32 => struct IterableMapping.Listing)"
          },
          "t_struct(Listing)8258_storage": {
            "label": "struct IterableMapping.Listing",
            "members": [
              {
                "label": "listingId",
                "type": "t_uint256"
              },
              {
                "label": "nftId",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address"
              },
              {
                "label": "nft",
                "type": "t_address"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "fee",
                "type": "t_uint256"
              },
              {
                "label": "purchaser",
                "type": "t_address"
              },
              {
                "label": "is1155",
                "type": "t_bool"
              },
              {
                "label": "listingTime",
                "type": "t_uint256"
              },
              {
                "label": "saleTime",
                "type": "t_uint256"
              },
              {
                "label": "endingTime",
                "type": "t_uint256"
              },
              {
                "label": "royalty",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Counter)2215_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(Royalty)8723_storage)": {
            "label": "mapping(address => struct Marketplace.Royalty)"
          },
          "t_struct(Royalty)8723_storage": {
            "label": "struct Marketplace.Royalty",
            "members": [
              {
                "label": "ipHolder",
                "type": "t_address"
              },
              {
                "label": "percent",
                "type": "t_uint16"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_contract(EscrowUpgradeable)2679": {
            "label": "contract EscrowUpgradeable"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "07becd365db0a5d35d16c725c23f45855a3decc4f43fbd71ac432a4ffdacbcb2": {
      "address": "0x3f4947E406cFdC2d6A28e0256D122f10598c24F5",
      "txHash": "0x74e7e01b4917e636eaf8ec5bb6276680e1924568dae18bfe0e9eab40e52d5fb8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
          },
          {
            "contract": "ERC1155ReceiverUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155ReceiverUpgradeable.sol:27"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "MembershipStaker",
            "label": "membershipContract",
            "type": "t_contract(IERC1155)5398",
            "src": "contracts/MembershipStaker.sol:31"
          },
          {
            "contract": "MembershipStaker",
            "label": "isInitPeriod",
            "type": "t_bool",
            "src": "contracts/MembershipStaker.sol:32"
          },
          {
            "contract": "MembershipStaker",
            "label": "stakeCount",
            "type": "t_uint256",
            "src": "contracts/MembershipStaker.sol:34"
          },
          {
            "contract": "MembershipStaker",
            "label": "stakers",
            "type": "t_struct(AddressSet)3152_storage",
            "src": "contracts/MembershipStaker.sol:35"
          },
          {
            "contract": "MembershipStaker",
            "label": "balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/MembershipStaker.sol:36"
          },
          {
            "contract": "MembershipStaker",
            "label": "rewardsId",
            "type": "t_struct(Counter)2318_storage",
            "src": "contracts/MembershipStaker.sol:38"
          },
          {
            "contract": "MembershipStaker",
            "label": "epochLength",
            "type": "t_uint256",
            "src": "contracts/MembershipStaker.sol:39"
          },
          {
            "contract": "MembershipStaker",
            "label": "pools",
            "type": "t_array(t_contract(RewardsPool)13578)dyn_storage",
            "src": "contracts/MembershipStaker.sol:40"
          },
          {
            "contract": "MembershipStaker",
            "label": "curPool",
            "type": "t_contract(RewardsPool)13578",
            "src": "contracts/MembershipStaker.sol:41"
          },
          {
            "contract": "MembershipStaker",
            "label": "completedPool",
            "type": "t_contract(RewardsPool)13578",
            "src": "contracts/MembershipStaker.sol:42"
          }
        ],
        "types": {
          "t_contract(IERC1155)5398": {
            "label": "contract IERC1155"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(AddressSet)3152_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2851_storage"
              }
            ]
          },
          "t_struct(Set)2851_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Counter)2318_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_contract(RewardsPool)13578)dyn_storage": {
            "label": "contract RewardsPool[]"
          },
          "t_contract(RewardsPool)13578": {
            "label": "contract RewardsPool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "29cbbcf7b4ee90568e75825d1d2b86117ea5d06c595b7dd29b50c0d88be01019": {
      "address": "0x4a59E5aB8850612DE7f664DC2e160b7167ecEDC5",
      "txHash": "0x54a1ec061fdea81e097029a40c76af7c069969b636f71c26062667926d906dd1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "PullPaymentUpgradeable",
            "label": "_escrow",
            "type": "t_contract(EscrowUpgradeable)2782",
            "src": "@openzeppelin/contracts-upgradeable/security/PullPaymentUpgradeable.sol:28"
          },
          {
            "contract": "PullPaymentUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PullPaymentUpgradeable.sol:76"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
          },
          {
            "contract": "Marketplace",
            "label": "memberships",
            "type": "t_contract(IERC1155)5398",
            "src": "contracts/Marketplace.sol:59"
          },
          {
            "contract": "Marketplace",
            "label": "vipFee",
            "type": "t_uint16",
            "src": "contracts/Marketplace.sol:61"
          },
          {
            "contract": "Marketplace",
            "label": "memberFee",
            "type": "t_uint16",
            "src": "contracts/Marketplace.sol:62"
          },
          {
            "contract": "Marketplace",
            "label": "regFee",
            "type": "t_uint16",
            "src": "contracts/Marketplace.sol:63"
          },
          {
            "contract": "Marketplace",
            "label": "activeListings",
            "type": "t_struct(Map)9775_storage",
            "src": "contracts/Marketplace.sol:65"
          },
          {
            "contract": "Marketplace",
            "label": "completeListings",
            "type": "t_struct(Map)9775_storage",
            "src": "contracts/Marketplace.sol:66"
          },
          {
            "contract": "Marketplace",
            "label": "cancelledListings",
            "type": "t_struct(Map)9775_storage",
            "src": "contracts/Marketplace.sol:67"
          },
          {
            "contract": "Marketplace",
            "label": "listingId",
            "type": "t_struct(Counter)2318_storage",
            "src": "contracts/Marketplace.sol:69"
          },
          {
            "contract": "Marketplace",
            "label": "royalties",
            "type": "t_mapping(t_address,t_struct(Royalty)10220_storage)",
            "src": "contracts/Marketplace.sol:71"
          },
          {
            "contract": "Marketplace",
            "label": "membershipStaker",
            "type": "t_contract(IMembershipStaker)9727",
            "src": "contracts/Marketplace.sol:72"
          }
        ],
        "types": {
          "t_contract(IERC1155)5398": {
            "label": "contract IERC1155"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_struct(Map)9775_storage": {
            "label": "struct IterableMapping.Map",
            "members": [
              {
                "label": "keys",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "idToKey",
                "type": "t_mapping(t_uint256,t_bytes32)"
              },
              {
                "label": "values",
                "type": "t_mapping(t_bytes32,t_struct(Listing)9754_storage)"
              },
              {
                "label": "indexOf",
                "type": "t_mapping(t_bytes32,t_uint256)"
              },
              {
                "label": "inserted",
                "type": "t_mapping(t_bytes32,t_bool)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(Listing)9754_storage)": {
            "label": "mapping(bytes32 => struct IterableMapping.Listing)"
          },
          "t_struct(Listing)9754_storage": {
            "label": "struct IterableMapping.Listing",
            "members": [
              {
                "label": "listingId",
                "type": "t_uint256"
              },
              {
                "label": "nftId",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address"
              },
              {
                "label": "nft",
                "type": "t_address"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "fee",
                "type": "t_uint256"
              },
              {
                "label": "purchaser",
                "type": "t_address"
              },
              {
                "label": "is1155",
                "type": "t_bool"
              },
              {
                "label": "listingTime",
                "type": "t_uint256"
              },
              {
                "label": "saleTime",
                "type": "t_uint256"
              },
              {
                "label": "endingTime",
                "type": "t_uint256"
              },
              {
                "label": "royalty",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Counter)2318_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(Royalty)10220_storage)": {
            "label": "mapping(address => struct Marketplace.Royalty)"
          },
          "t_struct(Royalty)10220_storage": {
            "label": "struct Marketplace.Royalty",
            "members": [
              {
                "label": "ipHolder",
                "type": "t_address"
              },
              {
                "label": "percent",
                "type": "t_uint16"
              }
            ]
          },
          "t_contract(IMembershipStaker)9727": {
            "label": "contract IMembershipStaker"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_contract(EscrowUpgradeable)2782": {
            "label": "contract EscrowUpgradeable"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    }
  }
}
