{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x19fe91EA9890aa8b4AFe941851760C19b6186bbA",
      "txHash": "0x84413563150eefca3c96e83fc965e246c4e780698be3de376183e8259f972b4e",
      "kind": "uups"
    },
    {
      "address": "0xddbb9a8E1F996C763c037C049fAE5879137D9Bab",
      "txHash": "0xde42390e8077459e7c035c75bd04ef8d2edf1c631ff03b2947fb174e1c60e223",
      "kind": "uups"
    },
    {
      "address": "0x87e10d181b988E1dB31E0A23356845fAbD253f8B",
      "txHash": "0x6b7685f25485fd4a35ead4ed4846bb53cfd3fe2900b797d0acc70ed648cd66cf",
      "kind": "uups"
    },
    {
      "address": "0x15876C450638158F48392F01dE2CEa51eccc7840",
      "txHash": "0xdce2c6cd2343ae9d43e2d78f9f5d3b40135de32d3868bd51dd5d82c54f9d2a73",
      "kind": "uups"
    },
    {
      "address": "0xb3cB12e7F9e442ef799a2B7e92f65ab8710d7b27",
      "txHash": "0xd11ee63e0df6bb4b9c4efc41349f56a94a7bccac2ad8733e822c11f866938121",
      "kind": "uups"
    },
    {
      "address": "0x70A9989dd73B026B34462BE158963587dD9ca16f",
      "txHash": "0x1a3700923e8ab7f4153db1f13be198286fbcfd7954a3d37a1d2bdf7a2a2510e4",
      "kind": "uups"
    },
    {
      "address": "0x8Dd84fb5d7f8A504BA2398243D768C604f8Daf5E",
      "txHash": "0x7a85d5c19f2d43d149f63a221f9684da47aa13106352ace37827a951f678c8f4",
      "kind": "uups"
    }
  ],
  "impls": {
    "25173dfd0dfb80660a4ae6d597f951df859a558a5297afec3f003a75e592e4d1": {
      "address": "0x7a8dA5Abc06148dEc5c7ceaD43eF4b5f737Eaab0",
      "txHash": "0xea0405c2b7b1f4af4c523af74263982bf65e71343ffe2ef14f607a8d0fea5b9d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "bb7e2a2e426e130f635e35bcf57c2d0f6fcced27c1224fde86018ee03b2c819e": {
      "address": "0x56acaaBC071d36f5b76eBEbDeA3C654d2C123154",
      "txHash": "0x420a31c6f493452a906cab96d8eb7f223e0ed3e69c7db724e7d9ddd73d4f2c8b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "PullPaymentUpgradeable",
            "label": "_escrow",
            "type": "t_contract(EscrowUpgradeable)2679",
            "src": "@openzeppelin/contracts-upgradeable/security/PullPaymentUpgradeable.sol:28"
          },
          {
            "contract": "PullPaymentUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PullPaymentUpgradeable.sol:76"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
          },
          {
            "contract": "Marketplace",
            "label": "memberships",
            "type": "t_contract(IERC1155)4255",
            "src": "contracts/Marketplace.sol:53"
          },
          {
            "contract": "Marketplace",
            "label": "vipFee",
            "type": "t_uint16",
            "src": "contracts/Marketplace.sol:55"
          },
          {
            "contract": "Marketplace",
            "label": "memberFee",
            "type": "t_uint16",
            "src": "contracts/Marketplace.sol:56"
          },
          {
            "contract": "Marketplace",
            "label": "regFee",
            "type": "t_uint16",
            "src": "contracts/Marketplace.sol:57"
          },
          {
            "contract": "Marketplace",
            "label": "activeListings",
            "type": "t_struct(Map)8281_storage",
            "src": "contracts/Marketplace.sol:59"
          },
          {
            "contract": "Marketplace",
            "label": "completeListings",
            "type": "t_struct(Map)8281_storage",
            "src": "contracts/Marketplace.sol:60"
          },
          {
            "contract": "Marketplace",
            "label": "cancelledListings",
            "type": "t_struct(Map)8281_storage",
            "src": "contracts/Marketplace.sol:61"
          },
          {
            "contract": "Marketplace",
            "label": "listingId",
            "type": "t_struct(Counter)2215_storage",
            "src": "contracts/Marketplace.sol:63"
          },
          {
            "contract": "Marketplace",
            "label": "royalties",
            "type": "t_mapping(t_address,t_struct(Royalty)8727_storage)",
            "src": "contracts/Marketplace.sol:65"
          }
        ],
        "types": {
          "t_contract(IERC1155)4255": {
            "label": "contract IERC1155"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_struct(Map)8281_storage": {
            "label": "struct IterableMapping.Map",
            "members": [
              {
                "label": "keys",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "idToKey",
                "type": "t_mapping(t_uint256,t_bytes32)"
              },
              {
                "label": "values",
                "type": "t_mapping(t_bytes32,t_struct(Listing)8260_storage)"
              },
              {
                "label": "indexOf",
                "type": "t_mapping(t_bytes32,t_uint256)"
              },
              {
                "label": "inserted",
                "type": "t_mapping(t_bytes32,t_bool)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(Listing)8260_storage)": {
            "label": "mapping(bytes32 => struct IterableMapping.Listing)"
          },
          "t_struct(Listing)8260_storage": {
            "label": "struct IterableMapping.Listing",
            "members": [
              {
                "label": "listingId",
                "type": "t_uint256"
              },
              {
                "label": "nftId",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address"
              },
              {
                "label": "nft",
                "type": "t_address"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "fee",
                "type": "t_uint256"
              },
              {
                "label": "purchaser",
                "type": "t_address"
              },
              {
                "label": "is1155",
                "type": "t_bool"
              },
              {
                "label": "listingTime",
                "type": "t_uint256"
              },
              {
                "label": "saleTime",
                "type": "t_uint256"
              },
              {
                "label": "endingTime",
                "type": "t_uint256"
              },
              {
                "label": "royalty",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Counter)2215_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(Royalty)8727_storage)": {
            "label": "mapping(address => struct Marketplace.Royalty)"
          },
          "t_struct(Royalty)8727_storage": {
            "label": "struct Marketplace.Royalty",
            "members": [
              {
                "label": "ipHolder",
                "type": "t_address"
              },
              {
                "label": "percent",
                "type": "t_uint16"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_contract(EscrowUpgradeable)2679": {
            "label": "contract EscrowUpgradeable"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "61626dd57b66612bf10a5d373ab0ac1a5e03a8c18f22e81cb60a62e1f4382b76": {
      "address": "0x82CC24a6319Fe8879ac8B67276bC117951a46f13",
      "txHash": "0x7460ade3f45ab18dbd9a6262b679f6a287e936e22843520173328c0cf15a0af3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "PullPaymentUpgradeable",
            "label": "_escrow",
            "type": "t_contract(EscrowUpgradeable)2679",
            "src": "@openzeppelin/contracts-upgradeable/security/PullPaymentUpgradeable.sol:28"
          },
          {
            "contract": "PullPaymentUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PullPaymentUpgradeable.sol:76"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
          },
          {
            "contract": "Marketplace",
            "label": "memberships",
            "type": "t_contract(IERC1155)4255",
            "src": "contracts/Marketplace.sol:53"
          },
          {
            "contract": "Marketplace",
            "label": "vipFee",
            "type": "t_uint16",
            "src": "contracts/Marketplace.sol:55"
          },
          {
            "contract": "Marketplace",
            "label": "memberFee",
            "type": "t_uint16",
            "src": "contracts/Marketplace.sol:56"
          },
          {
            "contract": "Marketplace",
            "label": "regFee",
            "type": "t_uint16",
            "src": "contracts/Marketplace.sol:57"
          },
          {
            "contract": "Marketplace",
            "label": "activeListings",
            "type": "t_struct(Map)8279_storage",
            "src": "contracts/Marketplace.sol:59"
          },
          {
            "contract": "Marketplace",
            "label": "completeListings",
            "type": "t_struct(Map)8279_storage",
            "src": "contracts/Marketplace.sol:60"
          },
          {
            "contract": "Marketplace",
            "label": "cancelledListings",
            "type": "t_struct(Map)8279_storage",
            "src": "contracts/Marketplace.sol:61"
          },
          {
            "contract": "Marketplace",
            "label": "listingId",
            "type": "t_struct(Counter)2215_storage",
            "src": "contracts/Marketplace.sol:63"
          },
          {
            "contract": "Marketplace",
            "label": "royalties",
            "type": "t_mapping(t_address,t_struct(Royalty)8723_storage)",
            "src": "contracts/Marketplace.sol:65"
          }
        ],
        "types": {
          "t_contract(IERC1155)4255": {
            "label": "contract IERC1155"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_struct(Map)8279_storage": {
            "label": "struct IterableMapping.Map",
            "members": [
              {
                "label": "keys",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "idToKey",
                "type": "t_mapping(t_uint256,t_bytes32)"
              },
              {
                "label": "values",
                "type": "t_mapping(t_bytes32,t_struct(Listing)8258_storage)"
              },
              {
                "label": "indexOf",
                "type": "t_mapping(t_bytes32,t_uint256)"
              },
              {
                "label": "inserted",
                "type": "t_mapping(t_bytes32,t_bool)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(Listing)8258_storage)": {
            "label": "mapping(bytes32 => struct IterableMapping.Listing)"
          },
          "t_struct(Listing)8258_storage": {
            "label": "struct IterableMapping.Listing",
            "members": [
              {
                "label": "listingId",
                "type": "t_uint256"
              },
              {
                "label": "nftId",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address"
              },
              {
                "label": "nft",
                "type": "t_address"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "fee",
                "type": "t_uint256"
              },
              {
                "label": "purchaser",
                "type": "t_address"
              },
              {
                "label": "is1155",
                "type": "t_bool"
              },
              {
                "label": "listingTime",
                "type": "t_uint256"
              },
              {
                "label": "saleTime",
                "type": "t_uint256"
              },
              {
                "label": "endingTime",
                "type": "t_uint256"
              },
              {
                "label": "royalty",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Counter)2215_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(Royalty)8723_storage)": {
            "label": "mapping(address => struct Marketplace.Royalty)"
          },
          "t_struct(Royalty)8723_storage": {
            "label": "struct Marketplace.Royalty",
            "members": [
              {
                "label": "ipHolder",
                "type": "t_address"
              },
              {
                "label": "percent",
                "type": "t_uint16"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_contract(EscrowUpgradeable)2679": {
            "label": "contract EscrowUpgradeable"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "f3df162992c59b8ac7fdb4b1845903d98f3cb4f37785018d390dd31a96bb6176": {
      "address": "0xe46730fa3B5f83BC2A98c68d1Bb64b1205BfEa8b",
      "txHash": "0x38f29027302a216a42877f5a1c05891f06a9ed947562894ba7dbf6c339dfffb5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "PullPaymentUpgradeable",
            "label": "_escrow",
            "type": "t_contract(EscrowUpgradeable)2679",
            "src": "@openzeppelin/contracts-upgradeable/security/PullPaymentUpgradeable.sol:28"
          },
          {
            "contract": "PullPaymentUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PullPaymentUpgradeable.sol:76"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
          },
          {
            "contract": "Marketplace",
            "label": "memberships",
            "type": "t_contract(IERC1155)4255",
            "src": "contracts/Marketplace.sol:53"
          },
          {
            "contract": "Marketplace",
            "label": "vipFee",
            "type": "t_uint16",
            "src": "contracts/Marketplace.sol:55"
          },
          {
            "contract": "Marketplace",
            "label": "memberFee",
            "type": "t_uint16",
            "src": "contracts/Marketplace.sol:56"
          },
          {
            "contract": "Marketplace",
            "label": "regFee",
            "type": "t_uint16",
            "src": "contracts/Marketplace.sol:57"
          },
          {
            "contract": "Marketplace",
            "label": "activeListings",
            "type": "t_struct(Map)8279_storage",
            "src": "contracts/Marketplace.sol:59"
          },
          {
            "contract": "Marketplace",
            "label": "completeListings",
            "type": "t_struct(Map)8279_storage",
            "src": "contracts/Marketplace.sol:60"
          },
          {
            "contract": "Marketplace",
            "label": "cancelledListings",
            "type": "t_struct(Map)8279_storage",
            "src": "contracts/Marketplace.sol:61"
          },
          {
            "contract": "Marketplace",
            "label": "listingId",
            "type": "t_struct(Counter)2215_storage",
            "src": "contracts/Marketplace.sol:63"
          },
          {
            "contract": "Marketplace",
            "label": "royalties",
            "type": "t_mapping(t_address,t_struct(Royalty)8723_storage)",
            "src": "contracts/Marketplace.sol:65"
          }
        ],
        "types": {
          "t_contract(IERC1155)4255": {
            "label": "contract IERC1155"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_struct(Map)8279_storage": {
            "label": "struct IterableMapping.Map",
            "members": [
              {
                "label": "keys",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "idToKey",
                "type": "t_mapping(t_uint256,t_bytes32)"
              },
              {
                "label": "values",
                "type": "t_mapping(t_bytes32,t_struct(Listing)8258_storage)"
              },
              {
                "label": "indexOf",
                "type": "t_mapping(t_bytes32,t_uint256)"
              },
              {
                "label": "inserted",
                "type": "t_mapping(t_bytes32,t_bool)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(Listing)8258_storage)": {
            "label": "mapping(bytes32 => struct IterableMapping.Listing)"
          },
          "t_struct(Listing)8258_storage": {
            "label": "struct IterableMapping.Listing",
            "members": [
              {
                "label": "listingId",
                "type": "t_uint256"
              },
              {
                "label": "nftId",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address"
              },
              {
                "label": "nft",
                "type": "t_address"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "fee",
                "type": "t_uint256"
              },
              {
                "label": "purchaser",
                "type": "t_address"
              },
              {
                "label": "is1155",
                "type": "t_bool"
              },
              {
                "label": "listingTime",
                "type": "t_uint256"
              },
              {
                "label": "saleTime",
                "type": "t_uint256"
              },
              {
                "label": "endingTime",
                "type": "t_uint256"
              },
              {
                "label": "royalty",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Counter)2215_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(Royalty)8723_storage)": {
            "label": "mapping(address => struct Marketplace.Royalty)"
          },
          "t_struct(Royalty)8723_storage": {
            "label": "struct Marketplace.Royalty",
            "members": [
              {
                "label": "ipHolder",
                "type": "t_address"
              },
              {
                "label": "percent",
                "type": "t_uint16"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_contract(EscrowUpgradeable)2679": {
            "label": "contract EscrowUpgradeable"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "3d511cce6f19b2f10461bc4403e81bf5160b268de828bdb93ce366302534d033": {
      "address": "0xb6E36B129078A8e19e684fbcF9165C8EB6C86Ce0",
      "txHash": "0x7f9764ed42159b8358cb4e813d73317eaa5c3372ab77b0044b6ee1d3e64fc7b8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "PullPaymentUpgradeable",
            "label": "_escrow",
            "type": "t_contract(EscrowUpgradeable)2679",
            "src": "@openzeppelin/contracts-upgradeable/security/PullPaymentUpgradeable.sol:28"
          },
          {
            "contract": "PullPaymentUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PullPaymentUpgradeable.sol:76"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
          },
          {
            "contract": "Marketplace",
            "label": "memberships",
            "type": "t_contract(IERC1155)4255",
            "src": "contracts/Marketplace.sol:54"
          },
          {
            "contract": "Marketplace",
            "label": "vipFee",
            "type": "t_uint16",
            "src": "contracts/Marketplace.sol:56"
          },
          {
            "contract": "Marketplace",
            "label": "memberFee",
            "type": "t_uint16",
            "src": "contracts/Marketplace.sol:57"
          },
          {
            "contract": "Marketplace",
            "label": "regFee",
            "type": "t_uint16",
            "src": "contracts/Marketplace.sol:58"
          },
          {
            "contract": "Marketplace",
            "label": "activeListings",
            "type": "t_struct(Map)8279_storage",
            "src": "contracts/Marketplace.sol:60"
          },
          {
            "contract": "Marketplace",
            "label": "completeListings",
            "type": "t_struct(Map)8279_storage",
            "src": "contracts/Marketplace.sol:61"
          },
          {
            "contract": "Marketplace",
            "label": "cancelledListings",
            "type": "t_struct(Map)8279_storage",
            "src": "contracts/Marketplace.sol:62"
          },
          {
            "contract": "Marketplace",
            "label": "listingId",
            "type": "t_struct(Counter)2215_storage",
            "src": "contracts/Marketplace.sol:64"
          },
          {
            "contract": "Marketplace",
            "label": "royalties",
            "type": "t_mapping(t_address,t_struct(Royalty)8723_storage)",
            "src": "contracts/Marketplace.sol:66"
          }
        ],
        "types": {
          "t_contract(IERC1155)4255": {
            "label": "contract IERC1155"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_struct(Map)8279_storage": {
            "label": "struct IterableMapping.Map",
            "members": [
              {
                "label": "keys",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "idToKey",
                "type": "t_mapping(t_uint256,t_bytes32)"
              },
              {
                "label": "values",
                "type": "t_mapping(t_bytes32,t_struct(Listing)8258_storage)"
              },
              {
                "label": "indexOf",
                "type": "t_mapping(t_bytes32,t_uint256)"
              },
              {
                "label": "inserted",
                "type": "t_mapping(t_bytes32,t_bool)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(Listing)8258_storage)": {
            "label": "mapping(bytes32 => struct IterableMapping.Listing)"
          },
          "t_struct(Listing)8258_storage": {
            "label": "struct IterableMapping.Listing",
            "members": [
              {
                "label": "listingId",
                "type": "t_uint256"
              },
              {
                "label": "nftId",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address"
              },
              {
                "label": "nft",
                "type": "t_address"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "fee",
                "type": "t_uint256"
              },
              {
                "label": "purchaser",
                "type": "t_address"
              },
              {
                "label": "is1155",
                "type": "t_bool"
              },
              {
                "label": "listingTime",
                "type": "t_uint256"
              },
              {
                "label": "saleTime",
                "type": "t_uint256"
              },
              {
                "label": "endingTime",
                "type": "t_uint256"
              },
              {
                "label": "royalty",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Counter)2215_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(Royalty)8723_storage)": {
            "label": "mapping(address => struct Marketplace.Royalty)"
          },
          "t_struct(Royalty)8723_storage": {
            "label": "struct Marketplace.Royalty",
            "members": [
              {
                "label": "ipHolder",
                "type": "t_address"
              },
              {
                "label": "percent",
                "type": "t_uint16"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_contract(EscrowUpgradeable)2679": {
            "label": "contract EscrowUpgradeable"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "32933eafcd08cff317c1c74de0f4117b99e24582fc4ceea2a28d425f7425eeb9": {
      "address": "0xDFE851eB48c60381d25a4BCf0e8a4f6D851647f5",
      "txHash": "0x2d8f5d8a3a586db17ba2e55dd75a3e979aff7762a9c5ade804a992d9a18dd670",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "PullPaymentUpgradeable",
            "label": "_escrow",
            "type": "t_contract(EscrowUpgradeable)2679",
            "src": "@openzeppelin/contracts-upgradeable/security/PullPaymentUpgradeable.sol:28"
          },
          {
            "contract": "PullPaymentUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PullPaymentUpgradeable.sol:76"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
          },
          {
            "contract": "Marketplace",
            "label": "memberships",
            "type": "t_contract(IERC1155)4255",
            "src": "contracts/Marketplace.sol:54"
          },
          {
            "contract": "Marketplace",
            "label": "vipFee",
            "type": "t_uint16",
            "src": "contracts/Marketplace.sol:56"
          },
          {
            "contract": "Marketplace",
            "label": "memberFee",
            "type": "t_uint16",
            "src": "contracts/Marketplace.sol:57"
          },
          {
            "contract": "Marketplace",
            "label": "regFee",
            "type": "t_uint16",
            "src": "contracts/Marketplace.sol:58"
          },
          {
            "contract": "Marketplace",
            "label": "activeListings",
            "type": "t_struct(Map)8279_storage",
            "src": "contracts/Marketplace.sol:60"
          },
          {
            "contract": "Marketplace",
            "label": "completeListings",
            "type": "t_struct(Map)8279_storage",
            "src": "contracts/Marketplace.sol:61"
          },
          {
            "contract": "Marketplace",
            "label": "cancelledListings",
            "type": "t_struct(Map)8279_storage",
            "src": "contracts/Marketplace.sol:62"
          },
          {
            "contract": "Marketplace",
            "label": "listingId",
            "type": "t_struct(Counter)2215_storage",
            "src": "contracts/Marketplace.sol:64"
          },
          {
            "contract": "Marketplace",
            "label": "royalties",
            "type": "t_mapping(t_address,t_struct(Royalty)8723_storage)",
            "src": "contracts/Marketplace.sol:66"
          }
        ],
        "types": {
          "t_contract(IERC1155)4255": {
            "label": "contract IERC1155"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_struct(Map)8279_storage": {
            "label": "struct IterableMapping.Map",
            "members": [
              {
                "label": "keys",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "idToKey",
                "type": "t_mapping(t_uint256,t_bytes32)"
              },
              {
                "label": "values",
                "type": "t_mapping(t_bytes32,t_struct(Listing)8258_storage)"
              },
              {
                "label": "indexOf",
                "type": "t_mapping(t_bytes32,t_uint256)"
              },
              {
                "label": "inserted",
                "type": "t_mapping(t_bytes32,t_bool)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(Listing)8258_storage)": {
            "label": "mapping(bytes32 => struct IterableMapping.Listing)"
          },
          "t_struct(Listing)8258_storage": {
            "label": "struct IterableMapping.Listing",
            "members": [
              {
                "label": "listingId",
                "type": "t_uint256"
              },
              {
                "label": "nftId",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address"
              },
              {
                "label": "nft",
                "type": "t_address"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "fee",
                "type": "t_uint256"
              },
              {
                "label": "purchaser",
                "type": "t_address"
              },
              {
                "label": "is1155",
                "type": "t_bool"
              },
              {
                "label": "listingTime",
                "type": "t_uint256"
              },
              {
                "label": "saleTime",
                "type": "t_uint256"
              },
              {
                "label": "endingTime",
                "type": "t_uint256"
              },
              {
                "label": "royalty",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Counter)2215_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(Royalty)8723_storage)": {
            "label": "mapping(address => struct Marketplace.Royalty)"
          },
          "t_struct(Royalty)8723_storage": {
            "label": "struct Marketplace.Royalty",
            "members": [
              {
                "label": "ipHolder",
                "type": "t_address"
              },
              {
                "label": "percent",
                "type": "t_uint16"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_contract(EscrowUpgradeable)2679": {
            "label": "contract EscrowUpgradeable"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "11ccabf877088939909d0554c2e0b9f3de9443399280f8b6b684fce50bd82703": {
      "address": "0x26D3Ca550fd2ee6E92B085022DdA6dfCB2c43830",
      "txHash": "0xcda5bf9e837f9bca3647434b1d6c24d07203e5b498ab9b53d12c0c5057a79255",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "PullPaymentUpgradeable",
            "label": "_escrow",
            "type": "t_contract(EscrowUpgradeable)2782",
            "src": "@openzeppelin/contracts-upgradeable/security/PullPaymentUpgradeable.sol:28"
          },
          {
            "contract": "PullPaymentUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PullPaymentUpgradeable.sol:76"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
          },
          {
            "contract": "Marketplace",
            "label": "memberships",
            "type": "t_contract(IERC1155)5398",
            "src": "contracts/Marketplace.sol:54"
          },
          {
            "contract": "Marketplace",
            "label": "vipFee",
            "type": "t_uint16",
            "src": "contracts/Marketplace.sol:56"
          },
          {
            "contract": "Marketplace",
            "label": "memberFee",
            "type": "t_uint16",
            "src": "contracts/Marketplace.sol:57"
          },
          {
            "contract": "Marketplace",
            "label": "regFee",
            "type": "t_uint16",
            "src": "contracts/Marketplace.sol:58"
          },
          {
            "contract": "Marketplace",
            "label": "activeListings",
            "type": "t_struct(Map)9775_storage",
            "src": "contracts/Marketplace.sol:60"
          },
          {
            "contract": "Marketplace",
            "label": "completeListings",
            "type": "t_struct(Map)9775_storage",
            "src": "contracts/Marketplace.sol:61"
          },
          {
            "contract": "Marketplace",
            "label": "cancelledListings",
            "type": "t_struct(Map)9775_storage",
            "src": "contracts/Marketplace.sol:62"
          },
          {
            "contract": "Marketplace",
            "label": "listingId",
            "type": "t_struct(Counter)2318_storage",
            "src": "contracts/Marketplace.sol:64"
          },
          {
            "contract": "Marketplace",
            "label": "royalties",
            "type": "t_mapping(t_address,t_struct(Royalty)10220_storage)",
            "src": "contracts/Marketplace.sol:66"
          },
          {
            "contract": "Marketplace",
            "label": "membershipStaker",
            "type": "t_contract(IMembershipStaker)9727",
            "src": "contracts/Marketplace.sol:67"
          }
        ],
        "types": {
          "t_contract(IERC1155)5398": {
            "label": "contract IERC1155"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_struct(Map)9775_storage": {
            "label": "struct IterableMapping.Map",
            "members": [
              {
                "label": "keys",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "idToKey",
                "type": "t_mapping(t_uint256,t_bytes32)"
              },
              {
                "label": "values",
                "type": "t_mapping(t_bytes32,t_struct(Listing)9754_storage)"
              },
              {
                "label": "indexOf",
                "type": "t_mapping(t_bytes32,t_uint256)"
              },
              {
                "label": "inserted",
                "type": "t_mapping(t_bytes32,t_bool)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(Listing)9754_storage)": {
            "label": "mapping(bytes32 => struct IterableMapping.Listing)"
          },
          "t_struct(Listing)9754_storage": {
            "label": "struct IterableMapping.Listing",
            "members": [
              {
                "label": "listingId",
                "type": "t_uint256"
              },
              {
                "label": "nftId",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address"
              },
              {
                "label": "nft",
                "type": "t_address"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "fee",
                "type": "t_uint256"
              },
              {
                "label": "purchaser",
                "type": "t_address"
              },
              {
                "label": "is1155",
                "type": "t_bool"
              },
              {
                "label": "listingTime",
                "type": "t_uint256"
              },
              {
                "label": "saleTime",
                "type": "t_uint256"
              },
              {
                "label": "endingTime",
                "type": "t_uint256"
              },
              {
                "label": "royalty",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Counter)2318_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(Royalty)10220_storage)": {
            "label": "mapping(address => struct Marketplace.Royalty)"
          },
          "t_struct(Royalty)10220_storage": {
            "label": "struct Marketplace.Royalty",
            "members": [
              {
                "label": "ipHolder",
                "type": "t_address"
              },
              {
                "label": "percent",
                "type": "t_uint16"
              }
            ]
          },
          "t_contract(IMembershipStaker)9727": {
            "label": "contract IMembershipStaker"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_contract(EscrowUpgradeable)2782": {
            "label": "contract EscrowUpgradeable"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "6842e41764122198ebfe6a9fa1424dc7d7ad01af4413fbef1088cc97f3cc0f99": {
      "address": "0xBe8E836ea2c75053B3B8ef9E60a5f67d0c3f938A",
      "txHash": "0x4b40df1efeafa8cf5eddd53a1af7680f95d7a4d204bb8857422e7b63746be662",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "PullPaymentUpgradeable",
            "label": "_escrow",
            "type": "t_contract(EscrowUpgradeable)2782",
            "src": "@openzeppelin/contracts-upgradeable/security/PullPaymentUpgradeable.sol:28"
          },
          {
            "contract": "PullPaymentUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PullPaymentUpgradeable.sol:76"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
          },
          {
            "contract": "Marketplace",
            "label": "memberships",
            "type": "t_contract(IERC1155)5398",
            "src": "contracts/Marketplace.sol:54"
          },
          {
            "contract": "Marketplace",
            "label": "vipFee",
            "type": "t_uint16",
            "src": "contracts/Marketplace.sol:56"
          },
          {
            "contract": "Marketplace",
            "label": "memberFee",
            "type": "t_uint16",
            "src": "contracts/Marketplace.sol:57"
          },
          {
            "contract": "Marketplace",
            "label": "regFee",
            "type": "t_uint16",
            "src": "contracts/Marketplace.sol:58"
          },
          {
            "contract": "Marketplace",
            "label": "activeListings",
            "type": "t_struct(Map)9775_storage",
            "src": "contracts/Marketplace.sol:60"
          },
          {
            "contract": "Marketplace",
            "label": "completeListings",
            "type": "t_struct(Map)9775_storage",
            "src": "contracts/Marketplace.sol:61"
          },
          {
            "contract": "Marketplace",
            "label": "cancelledListings",
            "type": "t_struct(Map)9775_storage",
            "src": "contracts/Marketplace.sol:62"
          },
          {
            "contract": "Marketplace",
            "label": "listingId",
            "type": "t_struct(Counter)2318_storage",
            "src": "contracts/Marketplace.sol:64"
          },
          {
            "contract": "Marketplace",
            "label": "royalties",
            "type": "t_mapping(t_address,t_struct(Royalty)10220_storage)",
            "src": "contracts/Marketplace.sol:66"
          },
          {
            "contract": "Marketplace",
            "label": "membershipStaker",
            "type": "t_contract(IMembershipStaker)9727",
            "src": "contracts/Marketplace.sol:67"
          }
        ],
        "types": {
          "t_contract(IERC1155)5398": {
            "label": "contract IERC1155"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_struct(Map)9775_storage": {
            "label": "struct IterableMapping.Map",
            "members": [
              {
                "label": "keys",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "idToKey",
                "type": "t_mapping(t_uint256,t_bytes32)"
              },
              {
                "label": "values",
                "type": "t_mapping(t_bytes32,t_struct(Listing)9754_storage)"
              },
              {
                "label": "indexOf",
                "type": "t_mapping(t_bytes32,t_uint256)"
              },
              {
                "label": "inserted",
                "type": "t_mapping(t_bytes32,t_bool)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(Listing)9754_storage)": {
            "label": "mapping(bytes32 => struct IterableMapping.Listing)"
          },
          "t_struct(Listing)9754_storage": {
            "label": "struct IterableMapping.Listing",
            "members": [
              {
                "label": "listingId",
                "type": "t_uint256"
              },
              {
                "label": "nftId",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address"
              },
              {
                "label": "nft",
                "type": "t_address"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "fee",
                "type": "t_uint256"
              },
              {
                "label": "purchaser",
                "type": "t_address"
              },
              {
                "label": "is1155",
                "type": "t_bool"
              },
              {
                "label": "listingTime",
                "type": "t_uint256"
              },
              {
                "label": "saleTime",
                "type": "t_uint256"
              },
              {
                "label": "endingTime",
                "type": "t_uint256"
              },
              {
                "label": "royalty",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Counter)2318_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(Royalty)10220_storage)": {
            "label": "mapping(address => struct Marketplace.Royalty)"
          },
          "t_struct(Royalty)10220_storage": {
            "label": "struct Marketplace.Royalty",
            "members": [
              {
                "label": "ipHolder",
                "type": "t_address"
              },
              {
                "label": "percent",
                "type": "t_uint16"
              }
            ]
          },
          "t_contract(IMembershipStaker)9727": {
            "label": "contract IMembershipStaker"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_contract(EscrowUpgradeable)2782": {
            "label": "contract EscrowUpgradeable"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "f6a1fae3774f4f916bc0705c13882ab053ff01d5b6120bc20ebbf4ae0d70b8a9": {
      "address": "0xE10dFa8E83512D1BFefeceCD1abD7a2ed9C35C5C",
      "txHash": "0x7b294cd7d4131b276381dd546dbc397f45faadabf16b28279aa22efb2bab1a58",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:81"
          },
          {
            "contract": "PullPaymentUpgradeable",
            "label": "_escrow",
            "type": "t_contract(EscrowUpgradeable)2782",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PullPaymentUpgradeable.sol:28"
          },
          {
            "contract": "PullPaymentUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PullPaymentUpgradeable.sol:76"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:68"
          },
          {
            "contract": "Marketplace",
            "label": "memberships",
            "type": "t_contract(IERC1155)5398",
            "src": "contracts\\Marketplace.sol:54"
          },
          {
            "contract": "Marketplace",
            "label": "vipFee",
            "type": "t_uint16",
            "src": "contracts\\Marketplace.sol:56"
          },
          {
            "contract": "Marketplace",
            "label": "memberFee",
            "type": "t_uint16",
            "src": "contracts\\Marketplace.sol:57"
          },
          {
            "contract": "Marketplace",
            "label": "regFee",
            "type": "t_uint16",
            "src": "contracts\\Marketplace.sol:58"
          },
          {
            "contract": "Marketplace",
            "label": "activeListings",
            "type": "t_struct(Map)9775_storage",
            "src": "contracts\\Marketplace.sol:60"
          },
          {
            "contract": "Marketplace",
            "label": "completeListings",
            "type": "t_struct(Map)9775_storage",
            "src": "contracts\\Marketplace.sol:61"
          },
          {
            "contract": "Marketplace",
            "label": "cancelledListings",
            "type": "t_struct(Map)9775_storage",
            "src": "contracts\\Marketplace.sol:62"
          },
          {
            "contract": "Marketplace",
            "label": "listingId",
            "type": "t_struct(Counter)2318_storage",
            "src": "contracts\\Marketplace.sol:64"
          },
          {
            "contract": "Marketplace",
            "label": "royalties",
            "type": "t_mapping(t_address,t_struct(Royalty)10220_storage)",
            "src": "contracts\\Marketplace.sol:66"
          },
          {
            "contract": "Marketplace",
            "label": "membershipStaker",
            "type": "t_contract(IMembershipStaker)9727",
            "src": "contracts\\Marketplace.sol:67"
          }
        ],
        "types": {
          "t_contract(IERC1155)5398": {
            "label": "contract IERC1155"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_struct(Map)9775_storage": {
            "label": "struct IterableMapping.Map",
            "members": [
              {
                "label": "keys",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "idToKey",
                "type": "t_mapping(t_uint256,t_bytes32)"
              },
              {
                "label": "values",
                "type": "t_mapping(t_bytes32,t_struct(Listing)9754_storage)"
              },
              {
                "label": "indexOf",
                "type": "t_mapping(t_bytes32,t_uint256)"
              },
              {
                "label": "inserted",
                "type": "t_mapping(t_bytes32,t_bool)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(Listing)9754_storage)": {
            "label": "mapping(bytes32 => struct IterableMapping.Listing)"
          },
          "t_struct(Listing)9754_storage": {
            "label": "struct IterableMapping.Listing",
            "members": [
              {
                "label": "listingId",
                "type": "t_uint256"
              },
              {
                "label": "nftId",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address"
              },
              {
                "label": "nft",
                "type": "t_address"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "fee",
                "type": "t_uint256"
              },
              {
                "label": "purchaser",
                "type": "t_address"
              },
              {
                "label": "is1155",
                "type": "t_bool"
              },
              {
                "label": "listingTime",
                "type": "t_uint256"
              },
              {
                "label": "saleTime",
                "type": "t_uint256"
              },
              {
                "label": "endingTime",
                "type": "t_uint256"
              },
              {
                "label": "royalty",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Counter)2318_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(Royalty)10220_storage)": {
            "label": "mapping(address => struct Marketplace.Royalty)"
          },
          "t_struct(Royalty)10220_storage": {
            "label": "struct Marketplace.Royalty",
            "members": [
              {
                "label": "ipHolder",
                "type": "t_address"
              },
              {
                "label": "percent",
                "type": "t_uint16"
              }
            ]
          },
          "t_contract(IMembershipStaker)9727": {
            "label": "contract IMembershipStaker"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_contract(EscrowUpgradeable)2782": {
            "label": "contract EscrowUpgradeable"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "bd358fc18d63b5b058019c5350812a01e66fd1ee2705d81f1b92fe2b9f1597e7": {
      "address": "0x1679e3ec826e1189840240E10bfa3De3fFD7F1c3",
      "txHash": "0x23189d51e3bb462b169d8ebbdf0a9c3a66be926f94a18391f51c888096edea1b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "PullPaymentUpgradeable",
            "label": "_escrow",
            "type": "t_contract(EscrowUpgradeable)2782",
            "src": "@openzeppelin/contracts-upgradeable/security/PullPaymentUpgradeable.sol:28"
          },
          {
            "contract": "PullPaymentUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PullPaymentUpgradeable.sol:76"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
          },
          {
            "contract": "Marketplace",
            "label": "memberships",
            "type": "t_contract(IERC1155)5398",
            "src": "contracts/Marketplace.sol:54"
          },
          {
            "contract": "Marketplace",
            "label": "vipFee",
            "type": "t_uint16",
            "src": "contracts/Marketplace.sol:56"
          },
          {
            "contract": "Marketplace",
            "label": "memberFee",
            "type": "t_uint16",
            "src": "contracts/Marketplace.sol:57"
          },
          {
            "contract": "Marketplace",
            "label": "regFee",
            "type": "t_uint16",
            "src": "contracts/Marketplace.sol:58"
          },
          {
            "contract": "Marketplace",
            "label": "activeListings",
            "type": "t_struct(Map)9775_storage",
            "src": "contracts/Marketplace.sol:60"
          },
          {
            "contract": "Marketplace",
            "label": "completeListings",
            "type": "t_struct(Map)9775_storage",
            "src": "contracts/Marketplace.sol:61"
          },
          {
            "contract": "Marketplace",
            "label": "cancelledListings",
            "type": "t_struct(Map)9775_storage",
            "src": "contracts/Marketplace.sol:62"
          },
          {
            "contract": "Marketplace",
            "label": "listingId",
            "type": "t_struct(Counter)2318_storage",
            "src": "contracts/Marketplace.sol:64"
          },
          {
            "contract": "Marketplace",
            "label": "royalties",
            "type": "t_mapping(t_address,t_struct(Royalty)10220_storage)",
            "src": "contracts/Marketplace.sol:66"
          },
          {
            "contract": "Marketplace",
            "label": "membershipStaker",
            "type": "t_contract(IMembershipStaker)9727",
            "src": "contracts/Marketplace.sol:67"
          }
        ],
        "types": {
          "t_contract(IERC1155)5398": {
            "label": "contract IERC1155"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_struct(Map)9775_storage": {
            "label": "struct IterableMapping.Map",
            "members": [
              {
                "label": "keys",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "idToKey",
                "type": "t_mapping(t_uint256,t_bytes32)"
              },
              {
                "label": "values",
                "type": "t_mapping(t_bytes32,t_struct(Listing)9754_storage)"
              },
              {
                "label": "indexOf",
                "type": "t_mapping(t_bytes32,t_uint256)"
              },
              {
                "label": "inserted",
                "type": "t_mapping(t_bytes32,t_bool)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(Listing)9754_storage)": {
            "label": "mapping(bytes32 => struct IterableMapping.Listing)"
          },
          "t_struct(Listing)9754_storage": {
            "label": "struct IterableMapping.Listing",
            "members": [
              {
                "label": "listingId",
                "type": "t_uint256"
              },
              {
                "label": "nftId",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address"
              },
              {
                "label": "nft",
                "type": "t_address"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "fee",
                "type": "t_uint256"
              },
              {
                "label": "purchaser",
                "type": "t_address"
              },
              {
                "label": "is1155",
                "type": "t_bool"
              },
              {
                "label": "listingTime",
                "type": "t_uint256"
              },
              {
                "label": "saleTime",
                "type": "t_uint256"
              },
              {
                "label": "endingTime",
                "type": "t_uint256"
              },
              {
                "label": "royalty",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Counter)2318_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(Royalty)10220_storage)": {
            "label": "mapping(address => struct Marketplace.Royalty)"
          },
          "t_struct(Royalty)10220_storage": {
            "label": "struct Marketplace.Royalty",
            "members": [
              {
                "label": "ipHolder",
                "type": "t_address"
              },
              {
                "label": "percent",
                "type": "t_uint16"
              }
            ]
          },
          "t_contract(IMembershipStaker)9727": {
            "label": "contract IMembershipStaker"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_contract(EscrowUpgradeable)2782": {
            "label": "contract EscrowUpgradeable"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "8b906e48b9410a8b8e979aaafbd28733fe1d4d9058a4f5288c780f68af39ee6f": {
      "address": "0xe7907F66a464729D7Ca521dfCe01816d06D226Dc",
      "txHash": "0x37cc455b96f4244ef17bd2a72cd8285ec466bd577f7863ab71273a6eba53ef78",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
          },
          {
            "contract": "ERC1155ReceiverUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155ReceiverUpgradeable.sol:27"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "MembershipStaker",
            "label": "membershipContract",
            "type": "t_contract(IERC1155)5398",
            "src": "contracts/MembershipStaker.sol:31"
          },
          {
            "contract": "MembershipStaker",
            "label": "isInitPeriod",
            "type": "t_bool",
            "src": "contracts/MembershipStaker.sol:32"
          },
          {
            "contract": "MembershipStaker",
            "label": "stakeCount",
            "type": "t_uint256",
            "src": "contracts/MembershipStaker.sol:34"
          },
          {
            "contract": "MembershipStaker",
            "label": "stakers",
            "type": "t_struct(AddressSet)3152_storage",
            "src": "contracts/MembershipStaker.sol:35"
          },
          {
            "contract": "MembershipStaker",
            "label": "balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/MembershipStaker.sol:36"
          },
          {
            "contract": "MembershipStaker",
            "label": "rewardsId",
            "type": "t_struct(Counter)2318_storage",
            "src": "contracts/MembershipStaker.sol:38"
          },
          {
            "contract": "MembershipStaker",
            "label": "epochLength",
            "type": "t_uint256",
            "src": "contracts/MembershipStaker.sol:39"
          },
          {
            "contract": "MembershipStaker",
            "label": "pools",
            "type": "t_array(t_contract(RewardsPool)13333)dyn_storage",
            "src": "contracts/MembershipStaker.sol:40"
          },
          {
            "contract": "MembershipStaker",
            "label": "curPool",
            "type": "t_contract(RewardsPool)13333",
            "src": "contracts/MembershipStaker.sol:41"
          },
          {
            "contract": "MembershipStaker",
            "label": "completedPool",
            "type": "t_contract(RewardsPool)13333",
            "src": "contracts/MembershipStaker.sol:42"
          }
        ],
        "types": {
          "t_contract(IERC1155)5398": {
            "label": "contract IERC1155"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(AddressSet)3152_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2851_storage"
              }
            ]
          },
          "t_struct(Set)2851_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Counter)2318_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_contract(RewardsPool)13333)dyn_storage": {
            "label": "contract RewardsPool[]"
          },
          "t_contract(RewardsPool)13333": {
            "label": "contract RewardsPool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "d878402bd2ac6164fab18889c18cfd25cd73498b9821c823ede55c0adfdfea21": {
      "address": "0xB93E614BB6d323034cFF13840d9aeaCB4872e3C9",
      "txHash": "0xc7cb7d9a813180dfcd055cd3c2467f443bd252839d97a446da45170ca3dd0aab",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "OfferContract",
            "label": "offers",
            "type": "t_mapping(t_bytes32,t_array(t_struct(Offer)12014_storage)dyn_storage)",
            "src": "contracts/Offer.sol:57"
          },
          {
            "contract": "OfferContract",
            "label": "offerHashes",
            "type": "t_array(t_bytes32)dyn_storage",
            "src": "contracts/Offer.sol:58"
          },
          {
            "contract": "OfferContract",
            "label": "marketContract",
            "type": "t_contract(Market)11991",
            "src": "contracts/Offer.sol:60"
          },
          {
            "contract": "OfferContract",
            "label": "stakerAddress",
            "type": "t_address_payable",
            "src": "contracts/Offer.sol:61"
          }
        ],
        "types": {
          "t_mapping(t_bytes32,t_array(t_struct(Offer)12014_storage)dyn_storage)": {
            "label": "mapping(bytes32 => struct Offer[])"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_struct(Offer)12014_storage)dyn_storage": {
            "label": "struct Offer[]"
          },
          "t_struct(Offer)12014_storage": {
            "label": "struct Offer",
            "members": [
              {
                "label": "nft",
                "type": "t_address"
              },
              {
                "label": "seller",
                "type": "t_address"
              },
              {
                "label": "buyer",
                "type": "t_address"
              },
              {
                "label": "coinAddress",
                "type": "t_address"
              },
              {
                "label": "status",
                "type": "t_enum(Status)11996"
              },
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "date",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(Status)11996": {
            "label": "enum Status",
            "members": [
              "Created",
              "Rejected",
              "Cancelled",
              "Accepted"
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_contract(Market)11991": {
            "label": "contract Market"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "59adb921d6d6df101b056b9dc18bad7b1dc01cc34f49dbcf4b043328b83dceb0": {
      "address": "0x5eb608C64adD6b379bcA4DE7B48B74f28AB3B083",
      "txHash": "0x06a67940fb48886622e5e0d92588d44dcbe58d2db92ec2d9d85654bf7396e26d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "OfferContract",
            "label": "offers",
            "type": "t_mapping(t_bytes32,t_array(t_struct(Offer)12104_storage)dyn_storage)",
            "src": "contracts/Offer.sol:60"
          },
          {
            "contract": "OfferContract",
            "label": "offerHashes",
            "type": "t_array(t_bytes32)dyn_storage",
            "src": "contracts/Offer.sol:61"
          },
          {
            "contract": "OfferContract",
            "label": "marketContract",
            "type": "t_contract(Market)12080",
            "src": "contracts/Offer.sol:63"
          },
          {
            "contract": "OfferContract",
            "label": "stakerAddress",
            "type": "t_address_payable",
            "src": "contracts/Offer.sol:64"
          },
          {
            "contract": "OfferContract",
            "label": "userOfferInfo",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))",
            "src": "contracts/Offer.sol:70"
          }
        ],
        "types": {
          "t_mapping(t_bytes32,t_array(t_struct(Offer)12104_storage)dyn_storage)": {
            "label": "mapping(bytes32 => struct Offer[])"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_struct(Offer)12104_storage)dyn_storage": {
            "label": "struct Offer[]"
          },
          "t_struct(Offer)12104_storage": {
            "label": "struct Offer",
            "members": [
              {
                "label": "nft",
                "type": "t_address"
              },
              {
                "label": "seller",
                "type": "t_address"
              },
              {
                "label": "buyer",
                "type": "t_address"
              },
              {
                "label": "coinAddress",
                "type": "t_address"
              },
              {
                "label": "status",
                "type": "t_enum(Status)12086"
              },
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "date",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(Status)12086": {
            "label": "enum Status",
            "members": [
              "Created",
              "Rejected",
              "Cancelled",
              "Accepted",
              "Updated"
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_contract(Market)12080": {
            "label": "contract Market"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))": {
            "label": "mapping(address => mapping(bytes32 => uint256))"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "29cbbcf7b4ee90568e75825d1d2b86117ea5d06c595b7dd29b50c0d88be01019": {
      "address": "0xFdD66F621a1c04ea31004611B2c43A845a19696E",
      "txHash": "0xf9340802c0da4de640c9fd435f0d5843e7824c186a4ff0f350ef252336370449",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "PullPaymentUpgradeable",
            "label": "_escrow",
            "type": "t_contract(EscrowUpgradeable)2782",
            "src": "@openzeppelin/contracts-upgradeable/security/PullPaymentUpgradeable.sol:28"
          },
          {
            "contract": "PullPaymentUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PullPaymentUpgradeable.sol:76"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
          },
          {
            "contract": "Marketplace",
            "label": "memberships",
            "type": "t_contract(IERC1155)5398",
            "src": "contracts/Marketplace.sol:59"
          },
          {
            "contract": "Marketplace",
            "label": "vipFee",
            "type": "t_uint16",
            "src": "contracts/Marketplace.sol:61"
          },
          {
            "contract": "Marketplace",
            "label": "memberFee",
            "type": "t_uint16",
            "src": "contracts/Marketplace.sol:62"
          },
          {
            "contract": "Marketplace",
            "label": "regFee",
            "type": "t_uint16",
            "src": "contracts/Marketplace.sol:63"
          },
          {
            "contract": "Marketplace",
            "label": "activeListings",
            "type": "t_struct(Map)9775_storage",
            "src": "contracts/Marketplace.sol:65"
          },
          {
            "contract": "Marketplace",
            "label": "completeListings",
            "type": "t_struct(Map)9775_storage",
            "src": "contracts/Marketplace.sol:66"
          },
          {
            "contract": "Marketplace",
            "label": "cancelledListings",
            "type": "t_struct(Map)9775_storage",
            "src": "contracts/Marketplace.sol:67"
          },
          {
            "contract": "Marketplace",
            "label": "listingId",
            "type": "t_struct(Counter)2318_storage",
            "src": "contracts/Marketplace.sol:69"
          },
          {
            "contract": "Marketplace",
            "label": "royalties",
            "type": "t_mapping(t_address,t_struct(Royalty)10220_storage)",
            "src": "contracts/Marketplace.sol:71"
          },
          {
            "contract": "Marketplace",
            "label": "membershipStaker",
            "type": "t_contract(IMembershipStaker)9727",
            "src": "contracts/Marketplace.sol:72"
          }
        ],
        "types": {
          "t_contract(IERC1155)5398": {
            "label": "contract IERC1155"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_struct(Map)9775_storage": {
            "label": "struct IterableMapping.Map",
            "members": [
              {
                "label": "keys",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "idToKey",
                "type": "t_mapping(t_uint256,t_bytes32)"
              },
              {
                "label": "values",
                "type": "t_mapping(t_bytes32,t_struct(Listing)9754_storage)"
              },
              {
                "label": "indexOf",
                "type": "t_mapping(t_bytes32,t_uint256)"
              },
              {
                "label": "inserted",
                "type": "t_mapping(t_bytes32,t_bool)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(Listing)9754_storage)": {
            "label": "mapping(bytes32 => struct IterableMapping.Listing)"
          },
          "t_struct(Listing)9754_storage": {
            "label": "struct IterableMapping.Listing",
            "members": [
              {
                "label": "listingId",
                "type": "t_uint256"
              },
              {
                "label": "nftId",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address"
              },
              {
                "label": "nft",
                "type": "t_address"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "fee",
                "type": "t_uint256"
              },
              {
                "label": "purchaser",
                "type": "t_address"
              },
              {
                "label": "is1155",
                "type": "t_bool"
              },
              {
                "label": "listingTime",
                "type": "t_uint256"
              },
              {
                "label": "saleTime",
                "type": "t_uint256"
              },
              {
                "label": "endingTime",
                "type": "t_uint256"
              },
              {
                "label": "royalty",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Counter)2318_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(Royalty)10220_storage)": {
            "label": "mapping(address => struct Marketplace.Royalty)"
          },
          "t_struct(Royalty)10220_storage": {
            "label": "struct Marketplace.Royalty",
            "members": [
              {
                "label": "ipHolder",
                "type": "t_address"
              },
              {
                "label": "percent",
                "type": "t_uint16"
              }
            ]
          },
          "t_contract(IMembershipStaker)9727": {
            "label": "contract IMembershipStaker"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_contract(EscrowUpgradeable)2782": {
            "label": "contract EscrowUpgradeable"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    }
  }
}
